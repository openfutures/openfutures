/**
 * @file
 * Positioning for a fixed-width, desktop-centric layout.
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

@import "base";


// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).
// $zen-column-count:  12;
// $zen-gutter-width:  20px;
// $zen-grid-width:    960px;


// IE6-7 don't support box-sizing: border-box. We can fix this in 1 of 2 ways:
// - (Preferred) Install the box-sizing polyfill and set the variable below to
//   the absolute path URL to the boxsizing.htc file.
//   @see https://github.com/Schepp/box-sizing-polyfill
//   $box-sizing-polyfill-path: "/path/to/boxsizing.htc";
// - Use the same CSS unit for grid width and gutter width (use px for both or
//   use % for both, etc.) and set the box-sizing variable to content-box.
     // $zen-box-sizing: border-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
// $zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;


/*
 * Center the page.
 */

// #page,
// .region-bottom {
//   margin-left: auto;
//   margin-right: auto;
//   width: $zen-grid-width;
// }

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

/* #content has been taken out */
// #header,
// #preface,
// .region-sidebar-first,
// .region-sidebar-second,
// #footer {
//   @include zen-grid-item-base();
// }

/*
 * Containers for grid items and flow items.
 */

// #header,
// #main,
// #footer {
//   @include zen-grid-container();
// }